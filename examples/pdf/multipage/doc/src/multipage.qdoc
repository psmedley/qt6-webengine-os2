/****************************************************************************
**
** Copyright (C) 2022 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example multipage
    \ingroup qtpdf-examples

    \title PDF Multipage Viewer Example
    \brief A PDF viewer that allows scrolling through the pages.

    \image multipageviewer.png

    \e {PDF Multipage Viewer} demonstrates how to use the PdfMultiPageView
    component to render PDF documents and search for text in them.

    \include examples-run.qdocinc

    \section1 Creating the Main Window

    Instantiate an \l ApplicationWindow, bind its title to the title of the
    PDF document, and create a toolbar:

    \quotefromfile multipage/viewer.qml
    \skipto ApplicationWindow
    \printuntil rightMargin

    The toolbar has buttons for most of the common actions:

    \printuntil ZoomOut

    Declare a PdfDocument and bind the \c status property and
    \c passwordRequired signal to inform the user when an error occurs or a
    password is required:

    \skipto onAccepted
    \skipto Dialog
    \printto PdfMultiPageView

    Add the main component, PdfMultiPageView:

    \printto onCurrentPageChanged
    \printto Drawer

    A \l Drawer holds a ListView to show search results from the
    \l {PdfMultiPageView::searchModel}{searchModel}:

    \printto ToolBar

    Finally, add a second toolbar as a footer, to hold the search field,
    search up/down buttons and some status information:

    \printuntil

    \section1 Files and Attributions
*/
